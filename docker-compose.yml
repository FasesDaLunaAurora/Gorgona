
services:
  # Banco de dados PostgreSQL compartilhado entre todos os microsserviços
  db:
    image: postgres:15
    container_name: gorgona_db
    environment:
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"

  # Microsserviço de autenticação (usuários e login)
  autenticacao:
    build: ./backend/microsservico_autenticacao  # Caminho do Dockerfile
    container_name: gorgona_autenticacao
    ports:
      - "${AUTENTICACAO_PORT}:8000"  # Porta no host, 8000 no container
    env_file:
      - ./backend/microsservico_autenticacao/.env  # Injeta variáveis de ambiente
    volumes:
    - ./backend/microsservico_autenticacao/src:/app/src  # <- mapeia código
    - ./backend/microsservico_autenticacao/alembic.ini:/app/alembic.ini  # <- mapeia alembic.ini
    - ./backend/microsservico_autenticacao/alembic:/app/alembic        # pasta de migrations
    depends_on:
      - db                          # Garante que o DB suba primeiro

#   # Microsserviço de produtos (estoque e kits)
#   produto:
#     build: ./backend/microsservico_produto
#     container_name: gorgona_produto
#     ports:
#       - "8002:8000"                 # Porta 8002 no host, 8000 no container
#     env_file:
#       - ./backend/microsservico_produto/.env
#     depends_on:
#       - db
#       - autenticacao                # Espera o serviço de autenticação subir

#   # Microsserviço de taxas (margem e entrega)
#   taxa:
#     build: ./backend/microsservico_taxa
#     container_name: gorgona_taxa
#     ports:
#       - "8003:8000"
#     env_file:
#       - ./backend/microsservico_taxa/.env
#     depends_on:
#       - db
#       - autenticacao

# Volumes para persistir dados do banco
volumes:
  db_data:
